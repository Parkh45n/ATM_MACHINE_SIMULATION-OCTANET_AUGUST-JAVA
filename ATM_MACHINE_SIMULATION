Here is the complete atm machine simulation code in java 
-------------------------------------------------------------------------------

package ATMMachine;

import java.util.ArrayList;
import java.util.Scanner;

class ATM {

    float Balance;
    int PIN = 2545;
    ArrayList<String> history = new ArrayList<>();

    // Method to check the entered PIN
    public void checkpin() {
        System.out.println("Enter your pin: ");
        Scanner sc = new Scanner(System.in);
        int enteredpin = sc.nextInt();

        // If entered PIN is correct, show the menu
        if (enteredpin == PIN) {
            menu();
        } else {
            // If entered PIN is incorrect, prompt for valid PIN and show menu
            System.out.println("Enter the valid pin: ");
            checkpin(); // Call checkpin() again to re-enter the correct pin
        }
    }

    // Method to display the main menu
    public void menu() {
        System.out.println("Enter Your Choice: ");
        System.out.println("1. Check A/C Balance");
        System.out.println("2. Withdraw Money");
        System.out.println("3. Deposit Money");
        System.out.println("4. Change PIN");
        System.out.println("5. Transaction History");
        System.out.println("6. EXIT");

        Scanner sc = new Scanner(System.in);
        int opt = sc.nextInt();

        // Calling respective methods based on user choice
        if (opt == 1) {
            checkBalance();
        } else if (opt == 2) {
            withdrawMoney();
        } else if (opt == 3) {
            depositMoney();
        } else if (opt == 4) {
            changePin();
        } else if (opt == 5) {
            transactionHistory();
        } else if (opt == 6) {
            return; // Exit the program
        } else {
            System.out.println("Enter a valid choice");
            menu(); // Call menu() again if invalid choice
        }
    }

    // Method to check and display the account balance
    public void checkBalance() {
        System.out.println("Balance: " + Balance);
        menu();
    }

    // Method to withdraw money
    public void withdrawMoney() {
        System.out.println("Enter Amount to Withdraw: ");
        Scanner sc = new Scanner(System.in);
        float amount = sc.nextFloat();

        // Check if there is enough balance to withdraw
        if (amount > Balance) {
            System.out.println("Insufficient Balance");
        } else {
            Balance = Balance - amount;
            System.out.println("Money Withdrawn Successfully");
            history.add("Withdrawn: " + amount); // Add to transaction history
        }
        menu();
    }

    // Method to deposit money
    public void depositMoney() {
        System.out.println("Enter the Amount: ");
        Scanner sc = new Scanner(System.in);
        float amount = sc.nextFloat();
        Balance = Balance + amount;
        System.out.println("Money Deposited Successfully");
        history.add("Deposited: " + amount); // Add to transaction history
        menu();
    }

    // Method to change the PIN
    public void changePin() {
        System.out.println("Enter your current PIN: ");
        Scanner sc = new Scanner(System.in);
        int currentPin = sc.nextInt();

        // Check if the current PIN is correct
        if (currentPin == PIN) {
            System.out.println("Enter new PIN: ");
            int newPin = sc.nextInt();
            PIN = newPin;
            System.out.println("PIN changed successfully!");
        } else {
            System.out.println("Incorrect PIN, please try again.");
        }
        menu();
    }

    // Method to display transaction history
    public void transactionHistory() {
        System.out.println("Transaction History: ");
        if (history.isEmpty()) {
            System.out.println("No transactions available.");
        } else {
            for (String transaction : history) {
                System.out.println(transaction);
            }
        }
        menu();
    }
}

public class ATMMachine {
    public static void main(String[] args) {
        ATM obj = new ATM();
        obj.checkpin(); // Start by checking the pin
    }
}
